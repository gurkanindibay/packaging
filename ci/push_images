#!/bin/bash

# make bash behave
set -euo pipefail
IFS=$'\n\t'

pgversions='10'
topdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
dockerfiles_dir="${topdir}/dockerfiles"

badusage=64

nprocs="${1:-1}"

# if [[ $TRAVIS_PULL_REQUEST != "false" ]] || [[ $TRAVIS_BRANCH != "test-dh-develop" ]] ; then
#     echo "PR is not merged to develop, not pushing to DockerHub"
#     exit 0;
# fi

echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

declare args

while read -r line; do
    IFS=',' read -r os release <<< "$line"

    if [[ "${os}" = 'debian' ]] || [[ "${os}" = 'ubuntu' ]]; then
        tag="${os}-${release}-all"
        args+="push citus/packaging:${tag}\n"
    elif [[ "${os}" = 'centos' ]] || [[ "${os}" = 'fedora' ]] || [[ "${os}" = 'oraclelinux' ]]; then
        # redhat variants need an image for each PostgreSQL version
        IFS=' '
        for pgversion in ${pgversions}; do
            pgshort=${pgversion//./}
            tag="${os}-${release}-pg${pgshort}"
            args+="push citus/packaging:${tag}\n"
        done
    elif [[ "${os}" = 'pgxn' ]]; then
        tag="${os}-all"
        args+="push citus/packaging:${tag}\n"
    else
        echo "$0: unrecognized OS -- ${os}" >&2
        exit $badusage
    fi
done <"${topdir}/os-list.csv"

echo -e "${args}" | xargs -t -L1 -P "${nprocs}" docker


