#!/bin/sh

set -eu

pg_version=
libdir="/usr/lib/postgresql/$pg_version/lib"
secret_files_list="$libdir/citus_secret_files.metadata"

# Make sure the script is being run as root
if [ "$(id -u)" -ne "0" ]; then
    echo "ERROR: citus-enterprise-pg-$pg_version-setup needs to be run as root"
    echo "HINT: try running \"sudo citus-enterprise-pg-$pg_version-setup\" instead"
    exit 1
fi


eula_text="
Your use of this software is subject to the terms and conditions of the license
agreement by which you acquired this software. If you are a volume license
customer, use of this software is subject to your volume license agreement.
You may not use this software if you have not validly acquired a license for
the software from Microsoft or its licensed distributors.

Do you accept these terms? y/N"

CITUS_ACCEPT_LICENSE="${CITUS_ACCEPT_LICENSE:-}"
while [ -z "$CITUS_ACCEPT_LICENSE" ]; do
    echo "$eula_text"
    read -r CITUS_ACCEPT_LICENSE
done

case "$CITUS_ACCEPT_LICENSE" in
    y|Y|Yes|YES|yes );;
    * )
        echo "ERROR: Terms of the software must be accepted"
        exit 1
esac


ssl_warning_text="
Since Citus is a distributed database, data is sent over the network between
nodes. It is YOUR RESPONSIBILITY as an operator to ensure that this traffic is
secure.

Since Citus version 8.1.0 (released 2018-12-17) the traffic between the
different nodes in the cluster is encrypted for NEW installations. This is done
by using TLS with self-signed certificates. This means that this does NOT
protect against Man-In-The-Middle attacks. This only protects against passive
eavesdropping on the network.

This automatic TLS setup of self-signed certificates and TLS is NOT DONE in the
following cases:
1. The Citus clusters was originally created with a Citus version before 8.1.0.
   Even when the cluster is later upgraded to version 8.1.0 or higher.
2. The ssl or ssl_ciphers Postgres configuration option is set to something
   other than the default.

In these cases it is assumed the operator has set up appropriate security
themselves.

So, with the default settings Citus clusters are not safe from
Man-In-The-Middle attacks. To secure the traffic completely you need to follow
the practices outlined here:
https://docs.citusdata.com/en/latest/

Please confirm that you have read this and understand that you should set up
TLS yourself to send traffic between nodes securely:
y/N?"

CITUS_ACCEPT_ENCRYPTION_WARNING="${CITUS_ACCEPT_ENCRYPTION_WARNING:-}"
while [ -z "$CITUS_ACCEPT_ENCRYPTION_WARNING" ]; do
    echo "$ssl_warning_text"
    read -r CITUS_ACCEPT_ENCRYPTION_WARNING
done

case "$CITUS_ACCEPT_ENCRYPTION_WARNING" in
    y|Y|Yes|YES|yes );;
    * )
        echo "ERROR: Warning about encrypted traffic must be accepted before installing"
        exit 1
esac

# create a temporary directory for gpg to use so it doesn't output warnings
temp_gnupghome="$(mktemp -d)"
CITUS_LICENSE_KEY="${CITUS_LICENSE_KEY:-}"
while [ -z "$CITUS_LICENSE_KEY" ]; do
    echo ''
    echo 'Please enter license key:'
    read -r CITUS_LICENSE_KEY
done

# Try to decrypt the first file in the list to check if the key is correct
if ! gpg --output "/dev/null" \
        --batch --no-tty --yes --quiet \
        --passphrase "$CITUS_LICENSE_KEY" \
        --homedir "$temp_gnupghome" \
        --decrypt "$(head -n 1 "$secret_files_list").gpg" 2> /dev/null; then
    echo "ERROR: Invalid license key supplied"
    exit 1
fi

echo "License key is valid"
echo "Installing..."

# Decrypt all the encrypted files
while read -r path_unencrypted; do
    path_encrypted="$path_unencrypted.gpg"
    # decrypt the encrypted file
    gpg --output "$path_unencrypted" \
        --batch --no-tty --yes --quiet \
        --passphrase "$CITUS_LICENSE_KEY" \
        --homedir "$temp_gnupghome" \
        --decrypt "$path_encrypted"

    # restore permissions and ownership
    chmod --reference "$path_encrypted" "$path_unencrypted"
    chown --reference "$path_encrypted" "$path_unencrypted"
done < "$secret_files_list"

# remove the temporary gpg directory
rm -rf "$temp_gnupghome"
